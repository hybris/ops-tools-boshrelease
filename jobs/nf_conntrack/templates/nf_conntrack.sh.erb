#!/bin/sh

##### nf_conntrack_settings #####
nf_conntrack_settings=(
  nf_conntrack_max,/proc/sys/net/netfilter/nf_conntrack_max,<%= p("nf_conntrack.max") %>
  nf_conntrack_generic_timeout,/proc/sys/net/netfilter/nf_conntrack_generic_timeout,<%= p("nf_conntrack.generic_timeout") %>
  nf_conntrack_tcp_timeout_established,/proc/sys/net/netfilter/nf_conntrack_tcp_timeout_established,<%= p("nf_conntrack.tcp_timeout_established") %>
  nf_conntrack_hashsize,/sys/module/nf_conntrack/parameters/hashsize,<%= p("nf_conntrack.hashsize") %>
)

##### Sending metric to Riemann #####
function send_metric_to_graphite {
  metric_name="$1"
  metric_value="$2"

  echo "<%= spec.deployment %>.<%= spec.job.name %>.<%= spec.index %>.$metric_name $metric_value `date +%s`" | nc -q0 <%= p("riemann.host") %>  <%= p("riemann.port") %>
}

##### Write in log file #####
function write_to_logs {
  message=$1

  date=$(date -u +"%Y-%m-%d %H:%M:%SZ")
  echo -e "[${date}] $message"
}

##### Reading setting value #####
function get_setting_value {
  parameter_name="$1"
  parameter_location_file="$2"

  if [ -f $parameter_location_file ]
  then
    parameter_actual_value=`cat $parameter_location_file`
    write_to_logs "$parameter_name: $parameter_actual_value"
  else
    write_to_logs "ERROR: $parameter_location_file file does not exists"
    return 1
  fi
}

##### Fix setting value #####
function fix_setting_value {
  parameter_name="$1"
  parameter_location_file="$2"
  parameter_desired_value="$3"

  if [ -f $parameter_location_file ]
  then
    if [ "x" == "x$parameter_desired_value" ]
      then
        write_to_logs "ERROR: no desired value specified for: $parameter_location_file"
        exit 1
      else
        parameter_actual_value=`cat $parameter_location_file`
        echo "$parameter_desired_value" > $parameter_location_file
        parameter_new_value=`cat $parameter_location_file`

        if [ "$parameter_actual_value" == "$parameter_new_value" ]
        then
          write_to_logs "$parameter_name: $parameter_new_value [Unchanged]"
        else
          write_to_logs "$parameter_name: $parameter_new_value [Changed]"
        fi

        send_metric_to_graphite $parameter_name $parameter_desired_value
      fi
  else
    write_to_logs "ERROR: $parameter_location_file does not exists"
    exit 1
  fi
}

##### Main ######
write_to_logs "----- Starting nf_conntrack settings setup -----"
for setting in "${nf_conntrack_settings[@]}"
do
  setting_name=`echo $setting | cut -d ',' -f1`
  setting_location=`echo $setting | cut -d ',' -f2`
  setting_value=`echo $setting | cut -d ',' -f3`

  get_setting_value $setting_name $setting_location
  fix_setting_value $setting_name $setting_location $setting_value
done
write_to_logs "------------------------------------------------"
write_to_logs " "
