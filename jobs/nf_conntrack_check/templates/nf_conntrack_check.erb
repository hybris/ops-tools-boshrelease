#!/bin/bash
set -u # report the usage of uninitialized variables

JOB_NAME=nf_conntrack_check

riemann_state="ok"
riemann_msg=""
riemann_metric=0

function write_msg {
  riemann_msg="$1"
  if [ "$#" -ge 2 ]; then
    riemann_state="$2"
  fi

  if [ "$#" -ge 3 ]; then
    riemann_metric=$3
  fi
  date=$(date -u +"%Y-%m-%d %H:%M:%SZ")
  echo -e "[${date}] $1"
}

function redirect_output {
  log_dir=$1
  prefix=$2

  mkdir -p $log_dir
  chown -R vcap:vcap $log_dir

  exec 1>> $log_dir/$prefix.stdout.log
  exec 2>> $log_dir/$prefix.stderr.log
}

log_dir=/var/vcap/sys/log/$JOB_NAME
redirect_output $log_dir $JOB_NAME


if [ ! -f /proc/sys/net/netfilter/nf_conntrack_count ] || [ ! -f /proc/sys/net/netfilter/nf_conntrack_max ]; then
	write_msg "CRITICAL! NF Conntrack is disabled!" "critical" 0
else
	nf_current=$(cat /proc/sys/net/netfilter/nf_conntrack_count || echo "not_there")
	nf_max=$(cat /proc/sys/net/netfilter/nf_conntrack_max || echo "not_there")
	nf_ratio=<%= p('nf_check.ratio') %>
  nf_calc=$(bc -l <<< "scale=10; $nf_ratio * $nf_max")
  nf_status=$(bc -l <<< "$nf_current>$nf_calc")

  if [ $nf_status -eq 0 ]; then
          write_msg "NF Conntrack is within limits." "ok" $nf_current
  else
          write_msg "CRITICAL! NF Conntrack is above limits!" "critical" $nf_current
  fi
fi

<% if_p("riemann.host") do %>
write_msg "Sending data to riemann: [$riemann_metric - $riemann_state - $riemann_msg - $JOB_NAME - <%= p("riemann.suffix") %>.<%= spec.deployment %>.<%= spec.job.name %>.<%= spec.index %>]"
/var/vcap/packages/raidman/bin/raidman -riemannHost <%= p("riemann.host") %> -eventMetric "$riemann_metric" -eventState "$riemann_state" -eventMessage "$riemann_msg" -eventHost $JOB_NAME -eventService "<%= p("riemann.suffix") %>.<%= spec.deployment %>.<%= spec.job.name %>.<%= spec.index %>.nf-conntack-max"
<% end %>
